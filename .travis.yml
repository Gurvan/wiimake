# reference: https://github.com/boostorg/hana/blob/master/.travis.yml
language: c++
sudo: required

#addons:
#  apt:
#    packages:
#      - g++-6

#cache:
#  directories:
#    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.6.2

matrix:

  include:
        
    - os: linux
      env: CMAKE_OPTIONS="-DCMAKE_CXX_COMPILER=/usr/bin/g++"
      compiler: gcc
        
    - os: linux
      env: CMAKE_OPTIONS="-DCMAKE_CXX_COMPILER=/usr/bin/g++"
      compiler: clang

    - os: osx
      compiler: gcc

    - os: osx
      compiler: clang

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

    # override the compiler
  #- if [[ "${LLVM_VERSION}" == "default" ]]; then LLVM_VERSION=3.9.0; fi
  #- if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # Install needed version of CMake  
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.0/cmake-3.0.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake
      brew upgrade cmake
    fi
  - cmake --version

  # Install Clang, libc++ and libc++abi
  #- |
  #  if [[ "${LLVM_VERSION}" != "" ]]; then
  #    LLVM_DIR=${DEPS_DIR}/llvm-${LLVM_VERSION}
  #    if [[ -z "$(ls -A ${LLVM_DIR})" ]]; then
  #      LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
  #      LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
  #      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
  #      CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
  #
  #      mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
  #      travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
  #      travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
  #      travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
  #      travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
  #      (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=clang++)
  #      (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
  #      (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
  #    fi
  #
  #    export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
  #    export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
  #    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
  #    export PATH="${LLVM_DIR}/clang/bin:${PATH}"
  #  fi
  #- ${CXX} --version

before_script:

  # Go back to the root of the project and setup the build directory
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - cd build
  - cmake .. ${CMAKE_OPTIONS}

script:

  - make


